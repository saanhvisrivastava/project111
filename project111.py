# -*- coding: utf-8 -*-
"""project111.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15NSyRdtwUKi7f1S_Z1aHvIvIpmdm0r61
"""

import csv
import pandas as pd
import plotly.figure_factory as ff
import plotly.graph_objects as go
import random
import statistics

df=pd.read_csv("studentMarks.csv")
data=df['Math_score'].tolist()

mean=statistics.mean(data)
print("Mean population is =",mean)

stdev=statistics.stdev(data)
print("Standard deviation=",stdev)
#code to find mean of 100 data point 1000 times
def random_set_of_mean(counter):
  datalist=[]
  for i in range(0,counter):
    random_index=random.randint(0,len(data)-1)
    value=data[random_index]
    datalist.append(value)

  mean=statistics.mean(datalist)
  return mean
#pass the number of times you want the mean of the data points as a parameter in 
#range function
#in for loop
mean_list=[]
for i in range(0,1000):
  set_of_means=random_set_of_mean(100)
  mean_list.append(set_of_means)

#calculation of mean and stdev of sampling data
stdev=statistics.stdev(mean_list)
print("Standard deviation of sampling data=",stdev)

mean=statistics.mean(mean_list)
print("Mean of sampling data",mean)

fig=ff.create_distplot([mean_list],["Sampling data"])
fig.show()

fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.20],mode="lines",name='Mean'))
fig.show()

#finding stdev of starting and ending values

first_stdev_start,first_stdev_end=mean-stdev,mean+stdev
print("Fisrt",first_stdev_start,"End",first_stdev_end)
second_stdev_start,second_stdev_end=mean-(stdev*2),mean+(stdev*2)
print("Second",second_stdev_start,"End",second_stdev_end)

third_stdev_start,third_stdev_end=mean-(stdev*3),mean+(stdev*3)
print("Third",third_stdev_start,"End",third_stdev_end)

#plotting the graph with traces
fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.20],mode="lines",name='Mean'))


fig.add_trace(go.Scatter(x=[first_stdev_start,first_stdev_start],y=[0,0.18],
                         mode="lines",name='First_stdevStart'))

fig.add_trace(go.Scatter(x=[first_stdev_end,first_stdev_end],y=[0,0.18],
                         mode="lines",name='First_stdevEnd'))

fig.add_trace(go.Scatter(x=[second_stdev_start,second_stdev_start],y=[0,0.18],
                         mode="lines",name='Second_stdevStart'))

fig.add_trace(go.Scatter(x=[second_stdev_end,second_stdev_end],y=[0,0.18],
                         mode="lines",name='Second_stdevEnd'))

fig.add_trace(go.Scatter(x=[third_stdev_start,third_stdev_start],y=[0,0.18],
                         mode="lines",name='Third_stdevStart'))

fig.add_trace(go.Scatter(x=[third_stdev_end,third_stdev_end],y=[0,0.18],
                         mode="lines",name='Third_stdevEnd'))
fig.show()

#finding the mean of the firstdata(student who got tablet),plot it in the graph

df=pd.read_csv("data1pad.csv")
data=df['Math_score'].tolist()

#mean of sample1
Sample1=statistics.mean(data)
print("Mean of sample1",Sample1)

fig=ff.create_distplot([mean_list],["Student marks"],show_hist=False)
fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.18],mode="lines",name="Mean"))

fig.add_trace(go.Scatter(x=[Sample1,Sample1],y=[0,0.18],mode="lines",name="MeanOfSample1"))

fig.add_trace(go.Scatter(x=[first_stdev_end,first_stdev_end],y=[0,0.18],mode="lines",name="firststdevEnd"))


fig.show()


#finding the mean of the firstdata(student who got extraclasses),plot it in the graph

df=pd.read_csv("data2Extraclass.csv")
data=df['Math_score'].tolist()

#mean of sample2
Sample2=statistics.mean(data)
print("Mean of sample2",Sample2)

fig=ff.create_distplot([mean_list],["Student marks"],show_hist=False)
fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.18],mode="lines",name="Mean"))

fig.add_trace(go.Scatter(x=[Sample2,Sample2],y=[0,0.18],mode="lines",name=
                         "MeanOfSample2"))

fig.add_trace(go.Scatter(x=[first_stdev_end,first_stdev_end],y=[0,0.18],mode="lines",name="firststdevEnd"))
fig.add_trace(go.Scatter(x=[second_stdev_end,second_stdev_end],y=[0,0.18],
                         mode="lines",name="secondstdevEnd"))


fig.show()

#finding the mean of the firstdata(student who got funsheet),plot it in the graph

df=pd.read_csv("data3Fun.csv")
data=df['Math_score'].tolist()

#mean of sample3
Sample3=statistics.mean(data)
print("Mean of sample3",Sample3)

fig=ff.create_distplot([mean_list],["Student marks"],show_hist=False)
fig.add_trace(go.Scatter(x=[mean,mean],y=[0,0.18],mode="lines",name="Mean"))

fig.add_trace(go.Scatter(x=[Sample3,Sample3],y=[0,0.18],mode="lines",name=
                         "MeanOfSample3"))

fig.add_trace(go.Scatter(x=[first_stdev_end,first_stdev_end],y=[0,0.18],mode="lines",name="firststdevEnd"))
fig.add_trace(go.Scatter(x=[second_stdev_end,second_stdev_end],y=[0,0.18],
                         mode="lines",name="secondstdevEnd"))
fig.add_trace(go.Scatter(x=[third_stdev_end,third_stdev_end],y=[0,0.18],
                         mode="lines",name="thirdstdevEnd"))


fig.show()







    


fig=ff.create_distplot([data],["MathScore"],show_hist=False)
fig.show()